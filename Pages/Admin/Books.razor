@page "/admin/books"
@page "/admin"
@inherits OwningComponentBase<IOnlineBookstoreRepository>

<table class="table table-sm table-striped table-hover table-bordered shadow p-3 mb-5 bg-body rounded">

    <thead>
        <tr>
            <th>Book ID</th>
            <th>Book Title</th>
            <th>Author</th>
            <th>Category</th>

        </tr>
    </thead>

    <tbody>

        @if (BookData?.Count() > 0)
        {
            //list books
            @foreach (Book b in BookData)
            {
                <tr>
                    <td  class="user-select-all">@b.BookId</td>
                    <td  class="user-select-all">@b.Title</td>
                    <td  class="user-select-all">@b.Author</td>
                    <td  class="user-select-all">@b.Category</td>

                    <td>
                        <NavLink class="btn btn-info btn-sm" href="@GetDetailsUrl(b.BookId)">Details</NavLink>
                    </td>

                    <td>
                        <NavLink class="btn btn-warning btn-sm" href="@GetEditUrl(b.BookId)">Edit</NavLink>
                    </td>

                    <td>
                        <NavLink class="btn btn-danger btn-sm" @onclick="@(x => RemoveBook(b))">Delete</NavLink>
                    </td>

                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No Books</td>
            </tr>
        }

    </tbody>
</table>

<NavLink class="btn btn-primary shadow p-3 mb-5 rounded" href="/admin/books/create">Add New Book</NavLink>


@code {

    public IOnlineBookstoreRepository repo => Service;

    public IEnumerable<Book> BookData { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        BookData = await repo.Books.ToListAsync();
    }

    public string GetDetailsUrl(long id) => $"/admin/books/details/{id}";

    public string GetEditUrl(long id) => $"/admin/books/edit/{id}";

    public async Task RemoveBook(Book b)
    {
        repo.DeleteProject(b);
        await UpdateData();
    }


}
